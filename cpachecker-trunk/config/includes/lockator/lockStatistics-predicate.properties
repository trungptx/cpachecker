# The configuration is used as a core configuration for lock analysis,
# extended Linux specific properties are located in lockStatistics-linux.properties

#include lockStatistics-core.properties

# CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.lock.LockCPA, cpa.predicate.BAMPredicateCPA, cpa.functionpointer.FunctionPointerCPA
CompositeCPA.cpas = cpa.thread.ThreadCPA, cpa.lock.LockCPA, cpa.predicate.BAMPredicateCPA, cpa.functionpointer.FunctionPointerCPA

analysis.algorithm.CEGAR = true

cegar.refiner = cpa.usage.refinement.IdentifierIterator
cpa.usage.refinementChain = IdentifierIterator, PointIterator, UsageIterator, PathIterator, PredicateRefiner
cpa.usage.totalARGCleaning = true
cegar.globalRefinement = true
cegar.refinementLoops = 2

cpa.predicate.bam.reduceIrrelevantPrecision = false
cpa.predicate.bam.useAbstractionReduction = false
cpa.predicate.bam.auxiliaryPredicateComputer = false

cpa.predicate.blk.alwaysAtFunctions = true
# cpa.predicate.abstraction.initialPredicates = /home/alpha/git/cpachecker/output/predmap_tmp2.txt
cpa.predicate.blk.threshold = 0
cpa.predicate.useBitwiseAxioms = true
solver.solver = SMTINTERPOL
cpa.predicate.encodeBitvectorAs = INTEGER
cpa.predicate.encodeFloatAs = RATIONAL
cpa.predicate.useArraysForHeap = false
cpa.predicate.defaultArrayLength = 1
cpa.predicate.maxArrayLength = 1
# cpa.predicate.smtinterpol.logAllQueries = true
# cpa.predicate.smtinterpol.logInterpolationQueries = true
# cpa.predicate.refinement.sharePredicates = true
# cpa.predicate.mathsat5.logAllQueries = true
# cpa.predicate.mathsat5.furtherOptions=random_seed=42,theory.la.split_rat_eq=true
cpa.predicate.blk.alwaysAtJoin     = true
cpa.predicate.blk.useCache	   = true
cpa.predicate.abs.useCache = true
# cpa.predicate.blk.alwaysAtLoops     = true
# cpa.predicate.refinement.keepAllPredicates = true

cpa.predicate.nondetFunctions = ldv_undef_int
cpa.predicate.useHavocAbstraction = true

# New heuristics: type detection and void* tracking
cpa.predicate.revealAllocationTypeFromLhs = true
cpa.predicate.deferUntypedAllocations = true

# New heuristic for cillified files: pre-populate small structures with all their fields
cpa.predicate.maxPreFilledAllocationSize = 0

# An option enabling PathFormulaWithUF, CToFormulaWithUFConverter and appropriate merging policy
cpa.predicate.handlePointerAliasing =  true

# Setting the option to make memory allocations always return correct addresses
cpa.predicate.memoryAllocationsAlwaysSucceed = true
